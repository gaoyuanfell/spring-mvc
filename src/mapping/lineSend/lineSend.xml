<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moka.lineSend.dao.LineSendDao">

    <insert id="insert" parameterType="moka.lineSend.bo.LineSend" useGeneratedKeys="true" keyProperty="id">
        <if test="lineSendId == 0">
            INSERT INTO moka.linesend(
            lineSendId, lineId, userId, title, context,introduce, privacy, praised, review, forward, createDate, sort, lft, rgt
            ) VALUES (#{lineSendId}, #{lineId}, #{userId}, #{title}, #{context}, #{introduce}, #{privacy}, #{praised}, #{review}, #{forward}, #{createDate}, #{sort}, 1, 2);
        </if>
        <if test="lineSendId != 0">
            LOCK TABLE moka.linesend WRITE;
            SELECT @myRight := lft FROM moka.linesend
            WHERE id = #{lineSendId};
            UPDATE moka.linesend SET rgt = rgt + 2 WHERE rgt > @myRight;
            UPDATE moka.linesend SET lft = lft + 2 WHERE lft > @myRight;
            INSERT INTO moka.linesend(lineSendId, lineId, userId, title, context,introduce, privacy, praised, review, forward, createDate, sort, lft, rgt)
            VALUES(#{lineSendId}, #{lineId}, #{userId}, #{title}, #{context}, #{introduce}, #{privacy}, #{praised}, #{review}, #{forward}, #{createDate}, #{sort}, @myRight + 1,@myRight + 2);
            UNLOCK TABLES;
        </if>
    </insert>

    <resultMap id="map" type="moka.lineSend.to.LineSendTo">
        <id property="id" column="id"/>
        <association property="user" javaType="moka.user.to.UserTo" column="userId" select="moka.user.dao.UserDao.findOne">
            <id property="id" column="id"/>
        </association>
    </resultMap>

    <select id="findOne" parameterType="Integer" resultType="moka.lineSend.to.LineSendTo">
        SELECT * FROM moka.linesend WHERE id = #{id};
    </select>

    <select id="findOneOfUser" parameterType="moka.lineSend.vo.LineSendVo" resultMap="map">
        SELECT
        l.* ,
        (
        SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineSendId = l.id AND cr.userId = #{userId} AND cr.comType = 1
        ) AS isPraised,
        (
        SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineSendId = l.id AND cr.userId = #{userId} AND cr.comType = 3
        ) AS isForward
        FROM moka.linesend l WHERE id = #{id};
    </select>

    <select id="findOneAll" parameterType="Integer" resultMap="map">
        SELECT * FROM moka.linesend WHERE id = #{id};
    </select>

    <select id="findCount" resultType="Integer">
        SELECT COUNT(id) FROM moka.linesend;
    </select>

    <select id="findPage" parameterType="moka.basic.page.Page" resultMap="map">
        SELECT t.* FROM
        (
        SELECT id, userId, title, introduce, privacy, praised, review, forward, createDate,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineSendId = ls.id AND cr.userId = #{userId} AND cr.comType = 1 ) AS isPraised,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineSendId = ls.id AND cr.userId = #{userId} AND cr.comType = 3 ) AS isForward,
        lineId, context, lineSendId
        FROM moka.linesend ls
        UNION ALL

        SELECT id, userId, title, introduce, privacy, praised, review, forward, createDate,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineId = l.id AND cr.userId = #{userId} AND cr.comType = 1 ) AS isPraised,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineId = l.id AND cr.userId = #{userId} AND cr.comType = 3 ) AS isForward,
        null, null, null
        FROM moka.line l
        ) t
        ORDER BY t.createDate DESC
        LIMIT #{pageStart} , #{pageSize};
    </select>

    <update id="addPraised" parameterType="moka.lineSend.vo.LineSendVo">
        <if test="operationType">
            UPDATE moka.linesend SET linesend.praised = linesend.praised - 1 WHERE linesend.id = #{id};
        </if>
        <if test="!operationType">
            UPDATE moka.linesend SET linesend.praised = linesend.praised + 1 WHERE linesend.id = #{id};
        </if>
    </update>

    <update id="addReview" parameterType="moka.lineSend.vo.LineSendVo">
        UPDATE moka.linesend SET linesend.review = linesend.review + 1 WHERE linesend.id = #{id};
    </update>

    <update id="addForward" parameterType="moka.lineSend.vo.LineSendVo">
        <if test="lineSendId != 0">
            UPDATE moka.linesend SET linesend.forward = linesend.forward + 1 WHERE linesend.id
            IN ( SELECT a.id FROM (SELECT e.id FROM moka.linesend as t, moka.linesend as e WHERE t.lft BETWEEN e.lft AND e.rgt AND t.id = #{lineSendId}) as a)
        </if>
    </update>

    <delete id="delete" parameterType="moka.lineSend.vo.LineSendVo">
        DELETE FROM moka.linesend WHERE id = #{id} AND userId = #{userId};
        DELETE FROM moka.comment WHERE lineSendId = #{id};
        DELETE FROM moka.commentrelation WHERE lineSendId = #{id};

        LOCK TABLE moka.linesend WRITE;
        SELECT @myLeft := lft, @myRight := rgt, @myWidth := rgt - lft + 1
        FROM moka.linesend
        WHERE id = #{id};
        DELETE FROM moka.linesend WHERE lft BETWEEN @myLeft AND @myRight;
        UPDATE moka.linesend SET rgt = rgt - @myWidth WHERE rgt > @myRight;
        UPDATE moka.linesend SET lft = lft - @myWidth WHERE lft > @myRight;
        UNLOCK TABLES;
    </delete>

</mapper>