<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="moka.line.dao.LineDao">

    <sql id="Line">
        userId,title,introduce,praised,review,forward,privacy,createDate
    </sql>

    <insert id="insert" parameterType="moka.line.bo.Line" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO moka.line(
        <include refid="Line"/>
        ) VALUES (#{userId}, #{title}, #{introduce}, #{praised}, #{review}, #{forward}, #{privacy}, #{createDate});
    </insert>

    <resultMap id="map" type="moka.line.to.LineTo">
        <id property="id" column="id"/>
        <association property="user" javaType="moka.user.to.UserTo" column="userId" select="moka.user.dao.UserDao.findOne"/>
    </resultMap>

    <select id="findOne" parameterType="Integer" resultType="moka.line.to.LineTo">
        SELECT * FROM moka.line WHERE id = #{id};
    </select>

    <select id="findOneOfUser" parameterType="moka.line.vo.LineVo" resultType="moka.line.to.LineTo">
        SELECT
        l.* ,
        (
        SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineId = l.id AND cr.userId = #{userId} AND cr.comType = 1
        ) AS isPraised,
        (
        SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineId = l.id AND cr.userId = #{userId} AND cr.comType = 3
        ) AS isForward
        FROM moka.line l WHERE l.id = #{id};
    </select>

    <select id="findOneAll" parameterType="Integer" resultMap="map">
        SELECT * FROM moka.line WHERE id = #{id};
    </select>

    <select id="findCount" resultType="Integer">
        SELECT COUNT(id) FROM moka.line;
    </select>


    <insert id="asd" parameterType="moka.line.bo.Line" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO moka.line ( userId, title, introduce, praised, forward, privacy, createDate, review )
    </insert>

    <select id="findPage" parameterType="moka.basic.page.Page" resultMap="map">
        SELECT t.* FROM
        (
        SELECT id, userId, title, introduce, privacy, praised, review, forward, createDate,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineSendId = ls.id AND cr.userId = #{userId} AND cr.comType = 1 ) AS isPraised,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineSendId = ls.id AND cr.userId = #{userId} AND cr.comType = 3 ) AS isForward,
        lineId, context, lineSendId
        FROM moka.linesend ls
        UNION ALL

        SELECT id, userId, title, introduce, privacy, praised, review, forward, createDate,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineId = l.id AND cr.userId = #{userId} AND cr.comType = 1 ) AS isPraised,
        (SELECT COUNT(cr.id) FROM moka.commentrelation cr WHERE 1 = 1 AND cr.lineId = l.id AND cr.userId = #{userId} AND cr.comType = 3 ) AS isForward,
        null, null, null
        FROM moka.line l
        ) t
        ORDER BY t.createDate DESC
        LIMIT #{pageStart} , #{pageSize};
    </select>

    <update id="addPraised" parameterType="moka.line.vo.LineVo">
        <if test="operationType">
            UPDATE moka.line SET line.praised = line.praised - 1 WHERE line.id = #{id};
        </if>
        <if test="!operationType">
            UPDATE moka.line SET line.praised = line.praised + 1 WHERE line.id = #{id};
        </if>
    </update>

    <update id="addReview" parameterType="moka.line.vo.LineVo">
        UPDATE moka.line SET line.review = line.review + 1 WHERE line.id = #{id};
    </update>

    <update id="addForward" parameterType="moka.line.vo.LineVo">
        UPDATE moka.line SET line.forward = line.forward + 1 WHERE line.id = #{id};
    </update>

</mapper>